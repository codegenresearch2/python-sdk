import pytest\\n\\nfrom mcp_python.client.stdio import StdioServerParameters, stdio_client\\nfrom mcp_python.types import JSONRPCMessage, JSONRPCRequest, JSONRPCResponse\\n\\n\\n@pytest.mark.anyio\\nasync def test_stdio_client():\\n    server_parameters = StdioServerParameters(command="/usr/bin/tee")\\n\\n    async with stdio_client(server_parameters) as (read_stream, write_stream):\\n        messages = [\\n            JSONRPCMessage(root=JSONRPCRequest(jsonrpc="2.0", id=1, method="ping")),\\n            JSONRPCMessage(root=JSONRPCResponse(jsonrpc="2.0", id=2, result={}))],\\n\\n        async with write_stream:\\n            for message in messages:\\n                await write_stream.send(message)\\n\\n        read_messages = []\\n        async with read_stream:\\n            async for message in read_stream:\\n                if isinstance(message, Exception):\\n                    raise message\\n\\n                read_messages.append(message)\\n                if len(read_messages) == 2:\\n                    break\\n\\n        assert len(read_messages) == 2\\n        assert read_messages[0] == JSONRPCMessage(root=JSONRPCRequest(jsonrpc="2.0", id=1, method="ping"))\\n        assert read_messages[1] == JSONRPCMessage(root=JSONRPCResponse(jsonrpc="2.0", id=2, result={}))\\\n